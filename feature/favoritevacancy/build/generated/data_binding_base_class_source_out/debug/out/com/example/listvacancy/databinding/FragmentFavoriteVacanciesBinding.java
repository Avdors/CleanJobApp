// Generated by view binder compiler. Do not edit!
package com.example.listvacancy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listvacancy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFavoriteVacanciesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView favoritesRecyclerVacancy;

  @NonNull
  public final Guideline leftGuideline;

  @NonNull
  public final TextView quantityVacancy;

  @NonNull
  public final Guideline rightGuideline;

  @NonNull
  public final TextView tvFavorites;

  private FragmentFavoriteVacanciesBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView favoritesRecyclerVacancy, @NonNull Guideline leftGuideline,
      @NonNull TextView quantityVacancy, @NonNull Guideline rightGuideline,
      @NonNull TextView tvFavorites) {
    this.rootView = rootView;
    this.favoritesRecyclerVacancy = favoritesRecyclerVacancy;
    this.leftGuideline = leftGuideline;
    this.quantityVacancy = quantityVacancy;
    this.rightGuideline = rightGuideline;
    this.tvFavorites = tvFavorites;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFavoriteVacanciesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFavoriteVacanciesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_favorite_vacancies, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFavoriteVacanciesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.favorites_recycler_vacancy;
      RecyclerView favoritesRecyclerVacancy = ViewBindings.findChildViewById(rootView, id);
      if (favoritesRecyclerVacancy == null) {
        break missingId;
      }

      id = R.id.leftGuideline;
      Guideline leftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (leftGuideline == null) {
        break missingId;
      }

      id = R.id.quantity_vacancy;
      TextView quantityVacancy = ViewBindings.findChildViewById(rootView, id);
      if (quantityVacancy == null) {
        break missingId;
      }

      id = R.id.rightGuideline;
      Guideline rightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (rightGuideline == null) {
        break missingId;
      }

      id = R.id.tv_favorites;
      TextView tvFavorites = ViewBindings.findChildViewById(rootView, id);
      if (tvFavorites == null) {
        break missingId;
      }

      return new FragmentFavoriteVacanciesBinding((ConstraintLayout) rootView,
          favoritesRecyclerVacancy, leftGuideline, quantityVacancy, rightGuideline, tvFavorites);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
